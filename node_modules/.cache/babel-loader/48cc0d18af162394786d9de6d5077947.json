{"ast":null,"code":"var _jsxFileName = \"/Users/weronikajanczuk/Documents/Coding/StrategicFinancial/strategic-financial-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //add checkbox to header, which selects/deselects all rows\n//add checkbox to each individual row\n//add functionality to the buttons -- add debt adds a row, remove debt removes a row\n//i. Please display the number of rows that have been checked (Check Row Count).\n//ii. Please calculate the Total Row Count in the table.\n//iii. Please calculate the Balance which is the sum of all the rows that have been checked.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://raw.githubusercontent.com/StrategicFS/Recruitment/master/data.json').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banksTable\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"selectAll\",\n                      type: \"checkbox\",\n                      checked: !!allSelected,\n                      onChange: setAllSelected\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Creditor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Min Pay%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: item.id,\n                    type: \"checkbox\",\n                    checked: !!item.checked,\n                    onChange: () => {\n                      const currentItemIndex = items.filter(v => v.id === item.id);\n                      items[currentItemIndex].checked = !items[currentItemIndex].checked;\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.creditorName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item.minPaymentPercentage.toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.balance.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add Debt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Remove Debt(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balanceTotal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rowCounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default App; //checked={this.state.isGoing}\n//onChange={this.handleInputChange}\n// <CheckBox\n// \t\t\t\t\t\t\t\t\t\t\tright\n// \t\t\t\t\t\t\t\t\t\t\tcheckedColor='#2a9d8f'\n// \t\t\t\t\t\t\t\t\t\t\tuncheckedColor='#2a9d8f'\n// \t\t\t\t\t\t\t\t\t\t\tcontainerStyle={{backgroundColor: '#ffffff', width: 30, height: 50}}\n// \t\t\t\t\t\t\t\t\t\t\tchecked={!!item.checked}\n// \t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\tconst items = [...this.state.restaurantList.results];\n// \t\t\t\t\t\t\t\t\t\t\t\tconst currentItemIndex = items.findIndex(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t(v) => v.place_id === item.place_id\n// \t\t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t\t\titems[currentItemIndex].checked = !items[\n// \t\t\t\t\t\t\t\t\t\t\t\t\tcurrentItemIndex\n// \t\t\t\t\t\t\t\t\t\t\t\t].checked;\n// \t\t\t\t\t\t\t\t\t\t\t\tthis.setState((state) => ({ ...state, items }));\n// \n// \t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t/>\n// useEffect(() => {\n//   fetch('https://raw.githubusercontent.com/StrategicFS/Recruitment/master/data.json')\n//     .then(res => res.json())\n//     .then(\n//       (result) => {\n//         setIsLoaded(true);\n//         setItems(result);\n//       },\n//       (error) => {\n//         setIsLoaded(true);\n//         setError(error);\n//       }\n//     )\n// }, [])\n// console.log('items-->', items)","map":{"version":3,"sources":["/Users/weronikajanczuk/Documents/Coding/StrategicFinancial/strategic-financial-app/src/App.js"],"names":["React","useState","useEffect","Table","App","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","allSelected","setAllSelected","map","item","id","checked","currentItemIndex","filter","v","creditorName","firstName","lastName","minPaymentPercentage","toFixed","balance"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Table from 'react-bootstrap/Table';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//add checkbox to header, which selects/deselects all rows\n//add checkbox to each individual row\n//add functionality to the buttons -- add debt adds a row, remove debt removes a row\n//i. Please display the number of rows that have been checked (Check Row Count).\n//ii. Please calculate the Total Row Count in the table.\n//iii. Please calculate the Balance which is the sum of all the rows that have been checked.\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://raw.githubusercontent.com/StrategicFS/Recruitment/master/data.json')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n      <div className=\"App\">\n        <div className=\"banksTable\">\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>\n                  <form>\n                    <input\n                      name=\"selectAll\"\n                      type=\"checkbox\"\n                      checked={!!allSelected}\n                      onChange={setAllSelected}\n                    />\n                  </form>\n                </th>\n                <th>Creditor</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Min Pay%</th>\n                <th>Balance</th>\n              </tr>\n            </thead>\n            <tbody>\n              {items.map(item => (\n                <tr key={item.id}>\n                  <td>\n                    <input\n                      name={item.id}\n                      type=\"checkbox\"\n                      checked={!!item.checked}\n                      onChange={() => {\n                        const currentItemIndex = items.filter((v) => v.id === item.id);\n                        items[currentItemIndex].checked = !items[currentItemIndex].checked;\n                      }}\n                    />\n                  </td>\n                  <td>{item.creditorName}</td>\n                  <td>{item.firstName}</td>\n                  <td>{item.lastName}</td>\n                  <td>{item.minPaymentPercentage.toFixed(2)}%</td>\n                  <td>{item.balance.toFixed(2)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        <div className=\"tableButtons\">\n          <button>Add Debt</button> <button>Remove Debt(s)</button>\n        </div>\n        <div className=\"balanceTotal\">\n            \n        </div>\n        <div className=\"rowCounts\">\n        </div>\n      </div>\n    );\n  }\n  }\n}\n\nexport default App;\n\n//checked={this.state.isGoing}\n//onChange={this.handleInputChange}\n\n// <CheckBox\n// \t\t\t\t\t\t\t\t\t\t\tright\n// \t\t\t\t\t\t\t\t\t\t\tcheckedColor='#2a9d8f'\n// \t\t\t\t\t\t\t\t\t\t\tuncheckedColor='#2a9d8f'\n// \t\t\t\t\t\t\t\t\t\t\tcontainerStyle={{backgroundColor: '#ffffff', width: 30, height: 50}}\n// \t\t\t\t\t\t\t\t\t\t\tchecked={!!item.checked}\n// \t\t\t\t\t\t\t\t\t\t\tonPress={() => {\n// \t\t\t\t\t\t\t\t\t\t\t\tconst items = [...this.state.restaurantList.results];\n// \t\t\t\t\t\t\t\t\t\t\t\tconst currentItemIndex = items.findIndex(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t(v) => v.place_id === item.place_id\n// \t\t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t\t\titems[currentItemIndex].checked = !items[\n// \t\t\t\t\t\t\t\t\t\t\t\t\tcurrentItemIndex\n// \t\t\t\t\t\t\t\t\t\t\t\t].checked;\n// \t\t\t\t\t\t\t\t\t\t\t\tthis.setState((state) => ({ ...state, items }));\n// \n// \t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t/>\n\n// useEffect(() => {\n//   fetch('https://raw.githubusercontent.com/StrategicFS/Recruitment/master/data.json')\n//     .then(res => res.json())\n//     .then(\n//       (result) => {\n//         setIsLoaded(true);\n//         setItems(result);\n//       },\n//       (error) => {\n//         setIsLoaded(true);\n//         setError(error);\n//       }\n//     )\n// }, [])\n\n// console.log('items-->', items)"]},"metadata":{},"sourceType":"module"}